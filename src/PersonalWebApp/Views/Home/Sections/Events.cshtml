@using System.Linq
@model HomeModel
<div class="container">
    <div class="row">
        <div class="col-md-12 headline">
            <h2>Events</h2>
            <p>
                Locked in. There are always others waiting to be announced.
            </p>
            @if (!Model.IsItAllEvents)
            {
                <p>Past years:
                    <span>
                        @if (Model.Events.All(x => x.Date.Year != 2015))
                        {
                            <a href="/?period=2015#events" rel="noopener">2015</a>
                        }
                        @if (Model.Events.All(x => x.Date.Year != 2016))
                        {
                            <a href="/?period=2016#events" rel="noopener">2016</a>
                        }
                        @if (Model.Events.All(x => x.Date.Year != 2017))
                        {
                            <a href="/?period=2017#events" rel="noopener">2017</a>
                        }
                        <a href="/?period=all#events" rel="noopener">Show All</a>
                    </span>
                </p>
            }
            else
            {
                <p><a href="/#events" rel="noopener">Back to current year</a></p>
            }
        </div>
    </div>

    @foreach (var groupedByYear in Model.Events.GroupBy(x => x.Date.Year).OrderByDescending(x => x.Key))
    {
        <div class="row events-per-year">
            <div class="col-md-3">
                <h3>@groupedByYear.Key</h3>
            </div>
            @foreach (var eventModel in groupedByYear.OrderByDescending(x => x.Date).Select((value, i) => new { Index = i, Value = value }))
            {
                var className = eventModel.Index == 0 ? "col-md-6 col-sm-8" : "col-md-6 col-md-offset-3 col-sm-8";
                var titleLayout = string.IsNullOrEmpty(eventModel.Value.Link) ?
                     eventModel.Value.Title :
                     $"<a href=\"{eventModel.Value.Link}\" rel=\"noopener\">{eventModel.Value.Title}</a>";

                var isUpcoming = System.DateTime.UtcNow < eventModel.Value.Date.ToUniversalTime();
                if (isUpcoming)
                {
                    titleLayout += "&emsp;<span class=\"label label-info\">Upcoming</span>";
                }
                <div class="@className">
                    <h4>@Html.Raw(titleLayout)</h4>
                    @foreach (var item in eventModel.Value.Items)
                    {
                        <div>@item.Description</div>
                        if(!isUpcoming && item.Collateral.Any())
                        {
                            <ul class="collateral">
                                @foreach (var collateralItem in item.Collateral.OrderByDescending(x => x.Value))
                                {
                                    <li><a href="@collateralItem.Key" rel="noopener">@collateralItem.Value</a></li>
                                }
                            </ul>
                        }
                    }
                    <hr class="hidden-xs">
                </div>
                <div class="col-md-3 col-sm-4 event-place">
                    <h4><i class="fa fa-location-arrow"></i>@eventModel.Value.Location</h4>
                    <i class="fa fa-calendar"></i>@eventModel.Value.Date.ToString("MMM dd, yyyy")
                    <hr class="visible-xs">
                </div>
            }
        </div>
    }
</div>